import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import { api } from "~/utils/api";
import { Container, chakra, Stack, Text, Box } from '@chakra-ui/react';

export default function Home() {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container p={{ base: 8, sm: 14 }}>
        <Stack direction="column" spacing={6} alignItems="center">
          <Box py={2} px={3} bg="teal" w="max-content" color="white" rounded="md" fontSize="sm">
            <Stack direction={{ base: 'column', sm: 'row' }}>
              <Text fontWeight="bold">Chakra UI T3 Stack</Text>
            </Stack>
          </Box>
          <chakra.h1
            fontSize={{ base: '4xl', sm: '5xl' }}
            fontWeight="bold"
            textAlign="center"
            maxW="600px"
          >
            Create accessible React apps{' '}
            <chakra.span color="teal" bg="linear-gradient(transparent 50%, #83e9e7 50%)">
              with speed
            </chakra.span>
          </chakra.h1>
        </Stack>
        <Stack direction="column" spacing={6} alignItems="center" mt={10}>
          <Link
              href="https://create.t3.gg/en/usage/first-steps"
              target="_blank"
            >
              <Text>First Steps →</Text>
              <Text>
                Just the basics - Everything you need to know to set up your
                database and authentication.
              </Text>
            </Link>
            <Link
              href="https://create.t3.gg/en/introduction"
              target="_blank"
            >
              <Text>Documentation →</Text>
              <Text>
                Learn more about Create T3 App, the libraries it uses, and how
                to deploy it.
              </Text>
            </Link>
        </Stack>
        <Stack direction="column" spacing={6} alignItems="center" mt={10}>
          <Text colorScheme="green">
            {hello.data ? hello.data.greeting : "Loading tRPC query..."}
          </Text>
          <AuthShowcase />
        </Stack>
      </Container>
    </>
  );
}

function AuthShowcase() {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
}
